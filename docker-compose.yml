services:
  backend:
    build:
      context: ./backend
    container_name: backend
    expose:
      - "8000"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DB: counter_db
    volumes:
      - ./backend:/app
    networks:
      - app-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
    networks:
      - app-network

  caddy:
    build: 
      context: ./caddy
      dockerfile: Dockerfile
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend
      - backend
    environment:
      - CLOUDFLARE_API_TOKEN=your_cloudflare_api_token
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: counter_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./counter_db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
    networks:
      - app-network

volumes:
  mysql_data:
  caddy_data:
  caddy_config:

networks:
  app-network:
    driver: bridge